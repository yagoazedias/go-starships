// Code generated by MockGen. DO NOT EDIT.
// Source: service/starships.go

// Package service is a generated GoMock package.
package service

import (
	model "post-example/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIStarships is a mock of IStarships interface.
type MockIStarships struct {
	ctrl     *gomock.Controller
	recorder *MockIStarshipsMockRecorder
}

// MockIStarshipsMockRecorder is the mock recorder for MockIStarships.
type MockIStarshipsMockRecorder struct {
	mock *MockIStarships
}

// NewMockIStarships creates a new mock instance.
func NewMockIStarships(ctrl *gomock.Controller) *MockIStarships {
	mock := &MockIStarships{ctrl: ctrl}
	mock.recorder = &MockIStarshipsMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIStarships) EXPECT() *MockIStarshipsMockRecorder {
	return m.recorder
}

// GetStarships mock base method.
func (m *MockIStarships) GetStarships() ([]model.Starship, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetStarships")
	ret0, _ := ret[0].([]model.Starship)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetStarships indicates an expected call of GetStarships.
func (mr *MockIStarshipsMockRecorder) GetStarships() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetStarships", reflect.TypeOf((*MockIStarships)(nil).GetStarships))
}
